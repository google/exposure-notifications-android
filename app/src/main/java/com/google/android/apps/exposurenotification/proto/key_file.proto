syntax = "proto2";

package com.google.android.apps.exposurenotification.debug;

option java_package = "com.google.android.apps.exposurenotification.proto";
option java_multiple_files = true;

// Protobuf definition for exports of confirmed temporary exposure keys.
//
// These files have a 16-byte, zero-padded header before the protobuf data
// starts. They will be contained in a zip archive, alongside a signature
// file verifying the contents.
//
// See https://developers.google.com/android/exposure-notifications/exposure-key-file-format
message TemporaryExposureKeyExport {
  // Time window of keys in this file based on arrival to server, in UTC
  // seconds
  optional fixed64 start_timestamp = 1;
  optional fixed64 end_timestamp = 2;

  // Region for which these keys came from (e.g., country)
  optional string region = 3;

  // E.g., Batch 2 of 10. Ordinal, 1-based numbering.
  // Note: Not yet supported on iOS. Use values of 1 for both.
  optional int32 batch_num = 4;
  optional int32 batch_size = 5;

  // Information about signatures
  repeated SignatureInfo signature_infos = 6;

  // The TemporaryExposureKeys themselves
  repeated TemporaryExposureKey keys = 7;
}

message SignatureInfo {
  // These fields are no longer needed (confirmed with Apple)
  // Apple read bundle id from an app's metadata, and we were
  // always using calling app package. It's not needed in the file.
  reserved 1, 2;
  reserved "app_bundle_id", "android_package";
  // Key version for rollovers
  // Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
  optional string verification_key_version = 3;
  // Additional identifying information
  // Must be in character class [a-zA-Z0-9_]
  // For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
  optional string verification_key_id = 4;
  // ASN.1 OID for Algorithm Identifier.
  // For cross-compatibility with Apple, use '1.2.840.10045.4.3.2'
  optional string signature_algorithm = 5;
}

message TemporaryExposureKey {
  // Key of infected user
  optional bytes key_data = 1;

  // Varying risks associated with exposure depending on type of verification
  optional int32 transmission_risk_level = 2;

  // The interval number since epoch for which a key starts
  optional int32 rolling_start_interval_number = 3;

  // Increments of 10 minutes describing how long a key is valid
  optional int32 rolling_period = 4 [default = 144];  // defaults to 24 hours
}

message TEKSignatureList {
  repeated TEKSignature signatures = 1;
}

message TEKSignature {
  // Info about the signing key, version, algorithm, etc
  optional SignatureInfo signature_info = 1;
  // E.g., Batch 2 of 10
  optional int32 batch_num = 2;
  optional int32 batch_size = 3;
  // Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
  optional bytes signature = 4;
}
